{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { HiSun, HiMoon } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useIsMounted } from '../../hooks/use-is-mounted.mjs';\nimport { useThemeMode } from '../../hooks/use-theme-mode.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst DarkThemeToggle = ({\n  className,\n  theme: customTheme = {},\n  iconDark: IconDark = HiSun,\n  iconLight: IconLight = HiMoon,\n  ...props\n}) => {\n  const isMounted = useIsMounted();\n  const {\n    computedMode,\n    toggleMode\n  } = useThemeMode();\n  const theme = mergeDeep(getTheme().darkThemeToggle, customTheme);\n  return /* @__PURE__ */jsxs(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    className: twMerge(theme.root.base, className),\n    onClick: toggleMode,\n    ...props,\n    children: [/* @__PURE__ */jsx(IconDark, {\n      \"aria-label\": \"Currently dark mode\",\n      \"data-active\": isMounted && computedMode === \"dark\",\n      className: twMerge(theme.root.icon, \"hidden dark:block\")\n    }), /* @__PURE__ */jsx(IconLight, {\n      \"aria-label\": \"Currently light mode\",\n      \"data-active\": isMounted && computedMode === \"light\",\n      className: twMerge(theme.root.icon, \"dark:hidden\")\n    })]\n  });\n};\nDarkThemeToggle.displayName = \"DarkThemeToggle\";\nexport { DarkThemeToggle };","map":{"version":3,"names":["jsxs","jsx","HiSun","HiMoon","twMerge","mergeDeep","useIsMounted","useThemeMode","getTheme","DarkThemeToggle","className","theme","customTheme","iconDark","IconDark","iconLight","IconLight","props","isMounted","computedMode","toggleMode","darkThemeToggle","type","root","base","onClick","children","icon","displayName"],"sources":["D:/VS-Code/React-Js-Project/ipl-fulltoss/client/node_modules/flowbite-react/dist/esm/components/DarkThemeToggle/DarkThemeToggle.mjs"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { HiSun, HiMoon } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useIsMounted } from '../../hooks/use-is-mounted.mjs';\nimport { useThemeMode } from '../../hooks/use-theme-mode.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\n\nconst DarkThemeToggle = ({\n  className,\n  theme: customTheme = {},\n  iconDark: IconDark = HiSun,\n  iconLight: IconLight = HiMoon,\n  ...props\n}) => {\n  const isMounted = useIsMounted();\n  const { computedMode, toggleMode } = useThemeMode();\n  const theme = mergeDeep(getTheme().darkThemeToggle, customTheme);\n  return /* @__PURE__ */ jsxs(\n    \"button\",\n    {\n      type: \"button\",\n      \"aria-label\": \"Toggle dark mode\",\n      \"data-testid\": \"dark-theme-toggle\",\n      className: twMerge(theme.root.base, className),\n      onClick: toggleMode,\n      ...props,\n      children: [\n        /* @__PURE__ */ jsx(\n          IconDark,\n          {\n            \"aria-label\": \"Currently dark mode\",\n            \"data-active\": isMounted && computedMode === \"dark\",\n            className: twMerge(theme.root.icon, \"hidden dark:block\")\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          IconLight,\n          {\n            \"aria-label\": \"Currently light mode\",\n            \"data-active\": isMounted && computedMode === \"light\",\n            className: twMerge(theme.root.icon, \"dark:hidden\")\n          }\n        )\n      ]\n    }\n  );\n};\nDarkThemeToggle.displayName = \"DarkThemeToggle\";\n\nexport { DarkThemeToggle };\n//# sourceMappingURL=DarkThemeToggle.mjs.map\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAC7C,SAASC,KAAK,EAAEC,MAAM,QAAQ,gBAAgB;AAC9C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,QAAQ,QAAQ,6BAA6B;AAEtD,MAAMC,eAAe,GAAGA,CAAC;EACvBC,SAAS;EACTC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;EACvBC,QAAQ,EAAEC,QAAQ,GAAGZ,KAAK;EAC1Ba,SAAS,EAAEC,SAAS,GAAGb,MAAM;EAC7B,GAAGc;AACL,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAGZ,YAAY,CAAC,CAAC;EAChC,MAAM;IAAEa,YAAY;IAAEC;EAAW,CAAC,GAAGb,YAAY,CAAC,CAAC;EACnD,MAAMI,KAAK,GAAGN,SAAS,CAACG,QAAQ,CAAC,CAAC,CAACa,eAAe,EAAET,WAAW,CAAC;EAChE,OAAO,eAAgBZ,IAAI,CACzB,QAAQ,EACR;IACEsB,IAAI,EAAE,QAAQ;IACd,YAAY,EAAE,kBAAkB;IAChC,aAAa,EAAE,mBAAmB;IAClCZ,SAAS,EAAEN,OAAO,CAACO,KAAK,CAACY,IAAI,CAACC,IAAI,EAAEd,SAAS,CAAC;IAC9Ce,OAAO,EAAEL,UAAU;IACnB,GAAGH,KAAK;IACRS,QAAQ,EAAE,CACR,eAAgBzB,GAAG,CACjBa,QAAQ,EACR;MACE,YAAY,EAAE,qBAAqB;MACnC,aAAa,EAAEI,SAAS,IAAIC,YAAY,KAAK,MAAM;MACnDT,SAAS,EAAEN,OAAO,CAACO,KAAK,CAACY,IAAI,CAACI,IAAI,EAAE,mBAAmB;IACzD,CACF,CAAC,EACD,eAAgB1B,GAAG,CACjBe,SAAS,EACT;MACE,YAAY,EAAE,sBAAsB;MACpC,aAAa,EAAEE,SAAS,IAAIC,YAAY,KAAK,OAAO;MACpDT,SAAS,EAAEN,OAAO,CAACO,KAAK,CAACY,IAAI,CAACI,IAAI,EAAE,aAAa;IACnD,CACF,CAAC;EAEL,CACF,CAAC;AACH,CAAC;AACDlB,eAAe,CAACmB,WAAW,GAAG,iBAAiB;AAE/C,SAASnB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}