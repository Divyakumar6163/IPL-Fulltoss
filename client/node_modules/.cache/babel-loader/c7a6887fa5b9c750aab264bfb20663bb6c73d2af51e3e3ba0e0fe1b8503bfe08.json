{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { Tooltip } from '../Tooltip/Tooltip.mjs';\nimport { ClipboardWithIcon } from './ClipboardWithIcon.mjs';\nimport { ClipboardWithIconText } from './ClipboardWithIconText.mjs';\nimport { copyToClipboard } from './helpers.mjs';\nconst ClipboardComponent = forwardRef(({\n  className,\n  valueToCopy,\n  label,\n  theme: customTheme = {},\n  ...rest\n}, ref) => {\n  const [isJustCopied, setIsJustCopied] = useState(false);\n  const theme = mergeDeep(getTheme().clipboard.button, customTheme);\n  return /* @__PURE__ */jsx(Tooltip, {\n    content: isJustCopied ? \"Copied\" : \"Copy to clipboard\",\n    className: \"[&_*]:cursor-pointer\",\n    children: /* @__PURE__ */jsx(\"button\", {\n      className: twMerge(theme.base, className),\n      onClick: () => copyToClipboard(valueToCopy, setIsJustCopied),\n      ...rest,\n      ref,\n      children: /* @__PURE__ */jsx(\"span\", {\n        className: theme.label,\n        children: label\n      })\n    })\n  });\n});\nClipboardComponent.displayName = \"Clipboard\";\nClipboardWithIcon.displayName = \"Clipboard.WithIcon\";\nClipboardWithIconText.displayName = \"Clipboard.WithIconText\";\nconst Clipboard = Object.assign(ClipboardComponent, {\n  WithIcon: ClipboardWithIcon,\n  WithIconText: ClipboardWithIconText\n});\nexport { Clipboard };","map":{"version":3,"names":["jsx","forwardRef","useState","twMerge","mergeDeep","getTheme","Tooltip","ClipboardWithIcon","ClipboardWithIconText","copyToClipboard","ClipboardComponent","className","valueToCopy","label","theme","customTheme","rest","ref","isJustCopied","setIsJustCopied","clipboard","button","content","children","base","onClick","displayName","Clipboard","Object","assign","WithIcon","WithIconText"],"sources":["D:/VS-Code/React-Js-Project/ipl-fulltoss/client/node_modules/flowbite-react/dist/esm/components/Clipboard/Clipboard.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { Tooltip } from '../Tooltip/Tooltip.mjs';\nimport { ClipboardWithIcon } from './ClipboardWithIcon.mjs';\nimport { ClipboardWithIconText } from './ClipboardWithIconText.mjs';\nimport { copyToClipboard } from './helpers.mjs';\n\nconst ClipboardComponent = forwardRef(\n  ({ className, valueToCopy, label, theme: customTheme = {}, ...rest }, ref) => {\n    const [isJustCopied, setIsJustCopied] = useState(false);\n    const theme = mergeDeep(getTheme().clipboard.button, customTheme);\n    return /* @__PURE__ */ jsx(Tooltip, { content: isJustCopied ? \"Copied\" : \"Copy to clipboard\", className: \"[&_*]:cursor-pointer\", children: /* @__PURE__ */ jsx(\n      \"button\",\n      {\n        className: twMerge(theme.base, className),\n        onClick: () => copyToClipboard(valueToCopy, setIsJustCopied),\n        ...rest,\n        ref,\n        children: /* @__PURE__ */ jsx(\"span\", { className: theme.label, children: label })\n      }\n    ) });\n  }\n);\nClipboardComponent.displayName = \"Clipboard\";\nClipboardWithIcon.displayName = \"Clipboard.WithIcon\";\nClipboardWithIconText.displayName = \"Clipboard.WithIconText\";\nconst Clipboard = Object.assign(ClipboardComponent, {\n  WithIcon: ClipboardWithIcon,\n  WithIconText: ClipboardWithIconText\n});\n\nexport { Clipboard };\n//# sourceMappingURL=Clipboard.mjs.map\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,qBAAqB,QAAQ,6BAA6B;AACnE,SAASC,eAAe,QAAQ,eAAe;AAE/C,MAAMC,kBAAkB,GAAGT,UAAU,CACnC,CAAC;EAAEU,SAAS;EAAEC,WAAW;EAAEC,KAAK;EAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,KAAK;EAC5E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,KAAK,GAAGV,SAAS,CAACC,QAAQ,CAAC,CAAC,CAACe,SAAS,CAACC,MAAM,EAAEN,WAAW,CAAC;EACjE,OAAO,eAAgBf,GAAG,CAACM,OAAO,EAAE;IAAEgB,OAAO,EAAEJ,YAAY,GAAG,QAAQ,GAAG,mBAAmB;IAAEP,SAAS,EAAE,sBAAsB;IAAEY,QAAQ,EAAE,eAAgBvB,GAAG,CAC5J,QAAQ,EACR;MACEW,SAAS,EAAER,OAAO,CAACW,KAAK,CAACU,IAAI,EAAEb,SAAS,CAAC;MACzCc,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACG,WAAW,EAAEO,eAAe,CAAC;MAC5D,GAAGH,IAAI;MACPC,GAAG;MACHM,QAAQ,EAAE,eAAgBvB,GAAG,CAAC,MAAM,EAAE;QAAEW,SAAS,EAAEG,KAAK,CAACD,KAAK;QAAEU,QAAQ,EAAEV;MAAM,CAAC;IACnF,CACF;EAAE,CAAC,CAAC;AACN,CACF,CAAC;AACDH,kBAAkB,CAACgB,WAAW,GAAG,WAAW;AAC5CnB,iBAAiB,CAACmB,WAAW,GAAG,oBAAoB;AACpDlB,qBAAqB,CAACkB,WAAW,GAAG,wBAAwB;AAC5D,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACnB,kBAAkB,EAAE;EAClDoB,QAAQ,EAAEvB,iBAAiB;EAC3BwB,YAAY,EAAEvB;AAChB,CAAC,CAAC;AAEF,SAASmB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}